name: build
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    env:
      #just hardcode this. It's not a mission-critical token, and we can always change it
      COVERALLS_REPO_TOKEN: "Ysqq6q68DgojDzv3gvl5Yv029HXZYwGxq"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "14.19.0"
      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm run test
      # disable coverage for now (because coveralls is down right now)
      #- run: npm run publish-coverage
      - run: npm run package
  release:
    #only run this task if a tag starting with 'v' was used to trigger this (i.e. a tagged release)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ci
    runs-on: ubuntu-latest
     #the ovsx publish never quits (but the upload succeeds), so kill the build if we've taken more than 10 minutes
    timeout-minutes: 10
    env:
      VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
      OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "14.19.0"

      #build package
      - run: npm ci
      - run: npm run build
      - run: npm run package

      #create GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false #contains(github.ref, '-beta.') == true

      #upload package to GitHub release
      - name: Upload GitHub Release Assets
        uses: alexellis/upload-assets@0.2.3
        with:
          asset_paths: '["*.vsix"]'

      #publish vsix to Visual Studio extension store
      - name: Publish to VSCode extension store
        #exclude beta release tags
        if: contains(github.ref, '-beta.') == false
        run: npx vsce publish -p ${{env.VSCE_TOKEN}}

      #pubish to OpenVSX
      - name: Publish to OpenVSX registry
        #exclude beta release tags
        if: contains(github.ref, '-beta.') == false
        run: npx ovsx publish -p ${{env.OPEN_VSX_TOKEN}} --debug
